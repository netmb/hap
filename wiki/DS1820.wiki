#summary One-sentence summary of this page.

= Introduction =

Ziel ist es ein Raspberry PI zu nutzen, um weitere Sensoren auszulesen, Diese werdendirekt an der GPIO Schnittstelle zu betrieben. 

= Details =

1. Installation der Kernelmodule:

{{{
pi@raspberrypi ~ $ sudo modprobe wire
pi@raspberrypi ~ $ sudo modprobe w1_gpio
pi@raspberrypi ~ $ sudo modprobe w1_therm
pi@raspberrypi ~ $ sudo apt-get update
pi@raspberrypi ~ $ sudo apt-get install bc
}}}

2. Anschluss Dalles DS1820

 * 4,7kOhm Pull-Up zwischen den DATA & 5V Leitung nicht vergessen!

3. Anlegen einer virtuellen CU

 * Es muss eine virtuelle CU angelegt werden und darin jeweils pro Kanal eine device. 
 * Diese wird jeweils im Script als Ziel eingegeben.
 * Formula: return ((X-5000)*0.001);
 * Type: Switch

-> Anzeige via GUI durch einen "value layer" der virtuelle device, wie eingerichtet.


4. Skript

 # Hierzu im Verzeichnis /sys/bus/w1/devices/w1_bus_master1/ nach schauen, welche ID der Sensor hat (hier 10-000802016a2f).
 # IP bei Telnet ersetzen
 # Destination & device ersetzen (Einbindung in die GUI ist noch in Arbeit...)
{{{
#!/bin/bash

# Temperatur des Sensors auslesen
etxt=$(grep 't=' /sys/bus/w1/devices/w1_bus_master1/10-000802016a2f/w1_slave | awk -F 't=' '{print $2}')

number=${etxt:0:4}
number_offset=$(($number+5000))

/usr/bin/expect <<EOD
spawn telnet 192.168.1.2 7891
sleep 2
send "source <Dummy_M> destination <Server-CCU> status device <Dummy_D> value $number_offset\r"
sleep 2
send "exit\r"
interact
EOD
}}}

 * Dummy_M = Dummy Modul
 * Server-CCU = Server CCU ID
 * Dummy_D = Dummy Device